#prime numbers
n = int(input())
a = 2
while a <= n:

    if a == n:
        print("This number is prime")
        break
    elif n % a == 0:
        print("This number is not prime")
        break
    a += 1
else:
    print("This number is not prime")
    
    
    
#convert text from lowerCamelCase to snake_case.
phrase = input()
newp = ''
for x in phrase:
    if x == phrase[0]:
        newp += x
    else:
        if not x.islower():
            newp += "_"
        newp += x
print(newp.lower())




#sample
for x in range(1, 4):
    for y in range(-3, 0):
        print(x * y)
#-3 -2 -1 -6 -4 -2 -9 -6 -3




def greet(bot_name, birth_year):
    print('Hello! My name is ' + bot_name + '.')
    print('I was created in ' + birth_year + '.')


def remind_name():
    print('Please, remind me your name.')
    name = input()
    print('What a great name you have, ' + name + '!')


def guess_age():
    print('Let me guess your age.')
    print('Enter remainders of dividing your age by 3, 5 and 7.')

    rem3 = int(input())
    rem5 = int(input())
    rem7 = int(input())
    age = (rem3 * 70 + rem5 * 21 + rem7 * 15) % 105

    print("Your age is " + str(age) + "; that's a good time to start programming!")

def count():
    print('Now I will prove to you that I can count to any number you want.')

    num = int(input())
    curr = 0
    while curr <= num:
        print(curr, '!')
        curr = curr + 1


def test():
    print("Let's test your programming knowledge.")
    print("Why do we use methods?"
        "1. To repeat a statement multiple times."
        "2. To decompose a program into several small subroutines."
        "3. To determine the execution time of a program."
        "4. To interrupt the execution of a program.")
    a = int(input())
    if a == 1 or a == 3 or a == 4:
        print("Please, try again.")
    else:
        print('Completed, have a nice day!')


def end():
    print('Congratulations, have a nice day!')


greet('Aid', '2021')  # change it as you need
remind_name()
guess_age()
count()
test()
end()
